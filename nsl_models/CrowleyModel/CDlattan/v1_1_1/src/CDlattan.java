/** 
 CDlattan class
 Represents the Caudate Tonically Active Cells Layer
 see     CDlattan
 version 0.1 96-11-19
 author  Michael Crowley
 var private CDlatinh_in - input coming from CDlatinh module (of type NslDouble2)
 var private SNCdop_in - input coming from SNC module (of type NslDouble2)
 var private CDlattan_out - output going to CDlatburst module (of type NslDouble2)
*/
package CrowleyModel.CDlattan.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class CDlattan extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  CDlattan
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 SNCdop_in; // 
public  NslDinDouble2 CDlatinh_in; // 
public  NslDoutDouble2 CDlattan_out; // 
private double cdlattantm; // 
private double cdlattanTONIC; // 
private double CDSNCdopK; // 
private double CDltsigma1; // 
private double CDltsigma2; // 
private double CDltsigma3; // 
private double CDltsigma4; // 
private  NslDouble2 cdlattan; // 

//methods 
public void initRun () 
{
	cdlattantm = 0.01;
	cdlattanTONIC = 10;
	CDSNCdopK = 0.5;
	CDltsigma1 = 0;
	CDltsigma2 = 10;
	CDltsigma3 = 0;
	CDltsigma4 = 10;
}

public void simRun () 
{
	// System.err.println("@@@@ CDlattan simRun entered @@@@");
	cdlattan.set(  system.nsldiff.eval (cdlattan,cdlattantm, __tempCDlattan4.setReference(NslSub.eval(__tempCDlattan4.get(), __tempCDlattan3.setReference(NslSub.eval(__tempCDlattan3.get(), __tempCDlattan2.setReference(NslAdd.eval(__tempCDlattan2.get(), __tempCDlattan0.setReference(NslSub.eval(__tempCDlattan0.get(), 0, cdlattan)), cdlattanTONIC)), CDlatinh_in)), (__tempCDlattan1.setReference(NslElemMult.eval(__tempCDlattan1.get(), CDSNCdopK, SNCdop_in)))))));
	CDlattan_out.set(  Nsl2Sigmoid.eval(cdlattan,CDltsigma1, CDltsigma2, CDltsigma3, CDltsigma4));
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int CorticalArraySize;

	/* Temporary variables */
		NslDouble2 __tempCDlattan0 = new NslDouble2(1, 1);
		NslDouble2 __tempCDlattan1 = new NslDouble2(1, 1);
		NslDouble2 __tempCDlattan2 = new NslDouble2(1, 1);
		NslDouble2 __tempCDlattan3 = new NslDouble2(1, 1);
		NslDouble2 __tempCDlattan4 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public CDlattan(String nslName, NslModule nslParent, int CorticalArraySize)
{
		super(nslName, nslParent);
		this.CorticalArraySize=CorticalArraySize;
		initSys();
		makeInstCDlattan(nslName, nslParent, CorticalArraySize);
	}

	public void makeInstCDlattan(String nslName, NslModule nslParent, int CorticalArraySize)
{ 
		Object[] nslArgs=new Object[]{CorticalArraySize};
		callFromConstructorTop(nslArgs);
		SNCdop_in = new NslDinDouble2("SNCdop_in", this, CorticalArraySize, CorticalArraySize);
		CDlatinh_in = new NslDinDouble2("CDlatinh_in", this, CorticalArraySize, CorticalArraySize);
		CDlattan_out = new NslDoutDouble2("CDlattan_out", this, CorticalArraySize, CorticalArraySize);
		cdlattan = new NslDouble2("cdlattan", this, CorticalArraySize, CorticalArraySize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end CDlattan

