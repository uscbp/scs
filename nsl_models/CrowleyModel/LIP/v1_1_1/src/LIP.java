/** 
A class representing the lateral Intraparital Cortex layer of Crowley Model.
@see Michael Crowley Model
@version   Fall 96
@ author   HBP
 -var public lipvistm used in LIPvis to calculate the membrane potential at
 lipvistm.<p>
 -var public lipvistm used in LIPmem to calculate the membrane potential at
 lipmemtm.<p>
*/
package CrowleyModel.LIP.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class LIP extends NslJavaModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  LIP
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 ThLIPmem_in; // 
public  NslDinDouble2 SLIPvis_in; // 
public  NslDoutDouble2 LIPvis_out; // 
public  NslDoutDouble2 LIPmem_out; // 
private double lipvistm; // 
private double lipmemtm; // 
private double LIPmemK; // 
private double LIPvissigma1; // 
private double LIPvissigma2; // 
private double LIPvissigma3; // 
private double LIPvissigma4; // 
private double LIPmemsigma1; // 
private double LIPmemsigma2; // 
private double LIPmemsigma3; // 
private double LIPmemsigma4; // 
private  NslDouble2 lipvis; // 
private  NslDouble2 lipmem; // 
private NslInt0 FOVEAX; // 
private NslInt0 FOVEAY; // 

//methods 
public void initModule()
{
	FOVEAX.set(  (NslInt0)nslGetValue("crowleyModel.FOVEAX"))  ;
	FOVEAY.set(  (NslInt0)nslGetValue("crowleyModel.FOVEAX"))  ;
	nslAddAreaCanvas("output", "lip", LIPmem_out, 0, 100);
}

public void initRun(){
    lipvis.set(  0);
    lipmem.set(  0);

    LIPvis_out.set(  0);
    LIPmem_out.set(0);
    LIPmemK=0.9;

    lipvistm=0.006;
    lipmemtm=0.008;
    LIPvissigma1=0;
    LIPvissigma2=90;
    LIPvissigma3=0;
    LIPvissigma4=90;

    LIPmemsigma1=0;
    LIPmemsigma2=90;
    LIPmemsigma3=0;
    LIPmemsigma4=90;
}

public void simRun(){
  // System.err.println("@@@@ LIP simRun entered @@@@");
  /* <Q> RETINA? LIPmemK ThLIPmem_in */

/* Note: the order of the following lines is very important */
/* The membrain potentials are calculated first, then the firing rates */

    lipvis.set(system.nsldiff.eval(lipvis,lipvistm,__tempLIP1.setReference(NslAdd.eval(__tempLIP1.get(), __tempLIP0.setReference(NslSub.eval(__tempLIP0.get(), 0, lipvis)), SLIPvis_in)) )); //RETINA;
    lipmem.set(system.nsldiff.eval(lipmem,lipmemtm,__tempLIP5.setReference(NslAdd.eval(__tempLIP5.get(), __tempLIP4.setReference(NslAdd.eval(__tempLIP4.get(), __tempLIP2.setReference(NslSub.eval(__tempLIP2.get(), 0, lipmem)), (__tempLIP3.setReference(NslElemMult.eval(__tempLIP3.get(), LIPmemK, ThLIPmem_in))))), LIPvis_out))));

    lipmem.set((int)FOVEAX.get(), (int)FOVEAY.get(), __tempLIP6.setReference(LIPvis_out.get((int)FOVEAX.get(), (int)FOVEAY.get())));                        

    LIPvis_out.set(Nsl2Sigmoid.eval(lipvis,LIPvissigma1, LIPvissigma2,
                              LIPvissigma3, LIPvissigma4));
    LIPmem_out.set(Nsl2Sigmoid.eval(lipmem,LIPmemsigma1, LIPmemsigma2,
                              LIPmemsigma3, LIPmemsigma4));
  }
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int array_size;

	/* Temporary variables */
		NslDouble2 __tempLIP0 = new NslDouble2(1, 1);
		NslDouble2 __tempLIP1 = new NslDouble2(1, 1);
		NslDouble2 __tempLIP2 = new NslDouble2(1, 1);
		NslDouble2 __tempLIP3 = new NslDouble2(1, 1);
		NslDouble2 __tempLIP4 = new NslDouble2(1, 1);
		NslDouble2 __tempLIP5 = new NslDouble2(1, 1);
		NslDouble0 __tempLIP6 = new NslDouble0();

	/* GENERIC CONSTRUCTOR: */
	public LIP(String nslName, NslModule nslParent, int array_size)
{
		super(nslName, nslParent);
		this.array_size=array_size;
		initSys();
		makeInstLIP(nslName, nslParent, array_size);
	}

	public void makeInstLIP(String nslName, NslModule nslParent, int array_size)
{ 
		Object[] nslArgs=new Object[]{array_size};
		callFromConstructorTop(nslArgs);
		ThLIPmem_in = new NslDinDouble2("ThLIPmem_in", this, array_size, array_size);
		SLIPvis_in = new NslDinDouble2("SLIPvis_in", this, array_size, array_size);
		LIPvis_out = new NslDoutDouble2("LIPvis_out", this, array_size, array_size);
		LIPmem_out = new NslDoutDouble2("LIPmem_out", this, array_size, array_size);
		lipvis = new NslDouble2("lipvis", this, array_size, array_size);
		lipmem = new NslDouble2("lipmem", this, array_size, array_size);
		FOVEAX = new NslInt0("FOVEAX", this);
		FOVEAY = new NslInt0("FOVEAY", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end LIP

