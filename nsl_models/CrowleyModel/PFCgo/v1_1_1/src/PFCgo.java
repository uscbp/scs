package CrowleyModel.PFCgo.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class PFCgo extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  PFCgo
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 LIPmem_in; // 
public  NslDinDouble2 PFCseq_in; // 
public  NslDinDouble2 PFCfovea_in; // 
public  NslDoutDouble2 PFCgo_out; // 
private  NslDouble2 pfcgo; // 
private double pfcgotm; // 
private double basepfcgotm; // 
private double CorticalSlowdown; // 
private double PFCgosigma1; // 
private double PFCgosigma2; // 
private double PFCgosigma3; // 
private double PFCgosigma4; // 
private double PFCseqK=0.9; // 
private double PFClipmem=0.35; // 

//methods 
public void initRun(){
//    PFClipmem      =  0.35; 
//    PFCseqK        =  0.9;

    pfcgo.set(  0.0);
    PFCgo_out.set(  0.0);
    basepfcgotm = 0.008;
    CorticalSlowdown = 1.0;
    pfcgotm = basepfcgotm*CorticalSlowdown ;
    PFCgosigma1 = 20.0;
    PFCgosigma2 = 60.0;
    PFCgosigma3 = 0.0;
    PFCgosigma4 = 60.0;
}

public void simRun(){

  // System.err.println("@@@@ PFCgo simRun entered @@@@");
    /* <Q> PFClipmem PFCseqK */
    pfcgo.set(  system.nsldiff.eval(pfcgo,pfcgotm,
		       __tempPFCgo5.setReference(NslSub.eval(__tempPFCgo5.get(), __tempPFCgo4.setReference(NslAdd.eval(__tempPFCgo4.get(), __tempPFCgo3.setReference(NslAdd.eval(__tempPFCgo3.get(), __tempPFCgo0.setReference(NslSub.eval(__tempPFCgo0.get(), 0, pfcgo)), (__tempPFCgo1.setReference(NslElemMult.eval(__tempPFCgo1.get(), PFClipmem, LIPmem_in))))), (__tempPFCgo2.setReference(NslElemMult.eval(__tempPFCgo2.get(), PFCseqK, PFCseq_in))))), PFCfovea_in)) ));
    PFCgo_out.set(  Nsl2Sigmoid.eval(pfcgo,PFCgosigma1, PFCgosigma2,
				  PFCgosigma3, PFCgosigma4));
	// 96/12/20 aa
	//System.out.println("PFCgo_out: " + PFCgo_out);
  }
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int array_size;

	/* Temporary variables */
		NslDouble2 __tempPFCgo0 = new NslDouble2(1, 1);
		NslDouble2 __tempPFCgo1 = new NslDouble2(1, 1);
		NslDouble2 __tempPFCgo2 = new NslDouble2(1, 1);
		NslDouble2 __tempPFCgo3 = new NslDouble2(1, 1);
		NslDouble2 __tempPFCgo4 = new NslDouble2(1, 1);
		NslDouble2 __tempPFCgo5 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public PFCgo(String nslName, NslModule nslParent, int array_size)
{
		super(nslName, nslParent);
		this.array_size=array_size;
		initSys();
		makeInstPFCgo(nslName, nslParent, array_size);
	}

	public void makeInstPFCgo(String nslName, NslModule nslParent, int array_size)
{ 
		Object[] nslArgs=new Object[]{array_size};
		callFromConstructorTop(nslArgs);
		LIPmem_in = new NslDinDouble2("LIPmem_in", this, array_size, array_size);
		PFCseq_in = new NslDinDouble2("PFCseq_in", this, array_size, array_size);
		PFCfovea_in = new NslDinDouble2("PFCfovea_in", this, array_size, array_size);
		PFCgo_out = new NslDoutDouble2("PFCgo_out", this, array_size, array_size);
		pfcgo = new NslDouble2("pfcgo", this, array_size, array_size);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end PFCgo

