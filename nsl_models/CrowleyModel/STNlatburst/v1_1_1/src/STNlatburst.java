/** 
 STNlatburst class
 Represents the Subthalamic Nucleus Burst Cells Layer
 see    STNlatburst
 version 0.1 96-11-19
 author  Michael Crowley
 -var public GPElatburst_in - input coming from GPElatburst module (of type NslDouble2)
 -var public STNlatburst_out - output going to SNRlatburst module (of type NslDouble2)
*/
package CrowleyModel.STNlatburst.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class STNlatburst extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  STNlatburst
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 GPElatburst_in; // 
public  NslDoutDouble2 STNlatburst_out; // 
private  NslDouble2 stnlatburst; // 
private double stnlatbursttm; // 
private double STNlatburstTONIC; // 
private double STNlbsigma1; // 
private double STNlbsigma2; // 
private double STNlbsigma3; // 
private double STNlbsigma4; // 

//methods 
public void initRun () {
    stnlatbursttm = 0.01;
    STNlatburstTONIC = 60;
    STNlbsigma1 = 10; //20; see lc30.nsl
    STNlbsigma2 = 60;
    STNlbsigma3 = 0;
    STNlbsigma4 = 60;
    stnlatburst.set(0);
    STNlatburst_out.set(0);
  }
  public void simRun () {
  // System.err.println("@@@@ STNlatburst simRun entered @@@@");
    stnlatburst.set(  system.nsldiff.eval (stnlatburst,stnlatbursttm, 
                                    __tempSTNlatburst2.setReference(NslSub.eval(__tempSTNlatburst2.get(), __tempSTNlatburst1.setReference(NslAdd.eval(__tempSTNlatburst1.get(), __tempSTNlatburst0.setReference(NslSub.eval(__tempSTNlatburst0.get(), 0, stnlatburst)), STNlatburstTONIC)), GPElatburst_in)) ));
    STNlatburst_out.set(  Nsl2Sigmoid.eval (stnlatburst,STNlbsigma1, STNlbsigma2,
                                           STNlbsigma3, STNlbsigma4));
  }
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int CorticalArraySize;

	/* Temporary variables */
		NslDouble2 __tempSTNlatburst0 = new NslDouble2(1, 1);
		NslDouble2 __tempSTNlatburst1 = new NslDouble2(1, 1);
		NslDouble2 __tempSTNlatburst2 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public STNlatburst(String nslName, NslModule nslParent, int CorticalArraySize)
{
		super(nslName, nslParent);
		this.CorticalArraySize=CorticalArraySize;
		initSys();
		makeInstSTNlatburst(nslName, nslParent, CorticalArraySize);
	}

	public void makeInstSTNlatburst(String nslName, NslModule nslParent, int CorticalArraySize)
{ 
		Object[] nslArgs=new Object[]{CorticalArraySize};
		callFromConstructorTop(nslArgs);
		GPElatburst_in = new NslDinDouble2("GPElatburst_in", this, CorticalArraySize, CorticalArraySize);
		STNlatburst_out = new NslDoutDouble2("STNlatburst_out", this, CorticalArraySize, CorticalArraySize);
		stnlatburst = new NslDouble2("stnlatburst", this, CorticalArraySize, CorticalArraySize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end STNlatburst

