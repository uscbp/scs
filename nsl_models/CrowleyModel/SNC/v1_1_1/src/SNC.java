/** 
 SNC class
 Represents the Substantia Nigra pars Compacta Layer
 @see    SNC
 @version 0.1 96/11/19
 @author  Michael Crowley
 -var private SNCdop_out - output going to CDlatburst and CDmedburst modules (of type NslDouble2)<p>
*/
package CrowleyModel.SNC.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class SNC extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  SNC
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 LimbicCortex_in; // 
public  NslDoutDouble2 SNCdop_out; // 
private  NslDouble2 sncdop; // 
private double sncdoptm; // 
private double SNCdopsigma1; // 
private double SNCdopsigma2; // 
private double SNCdopsigma3; // 
private double SNCdopsigma4; // 

//methods 
public void initRun () {
    sncdoptm = 0.01;
    SNCdopsigma1 = 0;
    SNCdopsigma2 = 60;
    SNCdopsigma3 = 0;
    SNCdopsigma4 = 20; //10;
  }

  public void simRun () {
  // System.err.println("@@@@ SNC simRun entered @@@@");
    sncdop.set(  system.nsldiff.eval (sncdop,sncdoptm, 
                          __tempSNC1.setReference(NslAdd.eval(__tempSNC1.get(), __tempSNC0.setReference(NslSub.eval(__tempSNC0.get(), 0, sncdop)), LimbicCortex_in)) ));
    SNCdop_out.set(  Nsl2Sigmoid.eval (sncdop,SNCdopsigma1, SNCdopsigma2,
                                 SNCdopsigma3, SNCdopsigma4));
  }
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int CorticalArraySize;

	/* Temporary variables */
		NslDouble2 __tempSNC0 = new NslDouble2(1, 1);
		NslDouble2 __tempSNC1 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public SNC(String nslName, NslModule nslParent, int CorticalArraySize)
{
		super(nslName, nslParent);
		this.CorticalArraySize=CorticalArraySize;
		initSys();
		makeInstSNC(nslName, nslParent, CorticalArraySize);
	}

	public void makeInstSNC(String nslName, NslModule nslParent, int CorticalArraySize)
{ 
		Object[] nslArgs=new Object[]{CorticalArraySize};
		callFromConstructorTop(nslArgs);
		LimbicCortex_in = new NslDinDouble2("LimbicCortex_in", this, CorticalArraySize, CorticalArraySize);
		SNCdop_out = new NslDoutDouble2("SNCdop_out", this, CorticalArraySize, CorticalArraySize);
		sncdop = new NslDouble2("sncdop", this, CorticalArraySize, CorticalArraySize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end SNC

