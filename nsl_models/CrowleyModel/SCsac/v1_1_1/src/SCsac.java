/** 
Here is the class representing the superior colliculus burst neuron
saccade generating (SCsac) layer.
*/
package CrowleyModel.SCsac.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class SCsac extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  SCsac
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 SNRlatburst_in; // 
public  NslDinDouble2 FEFsac_in; // 
public  NslDinDouble2 SCqv_in; // 
public  NslDinDouble2 SCbu_in; // 
public  NslDoutDouble2 SCsac_out; // 
private double SCsacsigma1; // 
private double SCsacsigma2; // 
private double SCsacsigma3; // 
private double SCsacsigma4; // 
private double SCsacvelK; // 
private double SCsacmax; // 
private double SCsacprevmax; // 
private double scsactm; // 
private double BSGscsacK; // 
private double SCfefsacK; // 
private double SCsnrlbK; // 
private double SCscbuK; // 
private double SCscqvK; // 
private  NslDouble2 scsac; // 
private NslInt0 FOVEAX; // 
private NslInt0 FOVEAY; // 

//methods 
public void initModule()
{
	FOVEAX.set(  (NslInt0)nslGetValue("crowleyModel.FOVEAX"));
	FOVEAY.set(  (NslInt0)nslGetValue("crowleyModel.FOVEAY"));  
}

public void initRun()
{
	scsac.set( 0);
	SCsac_out.set(  0);
	//threshold to the saccade
	SCsacsigma1 =   30;
	SCsacsigma2 =  160;
	SCsacsigma3 =    0;
	//LNK_SC2_1
	SCsacsigma4 = 1000;
	//of the matrix SCsac.

	SCsacvelK   = 0.9/(SCsac_out.getSize1()*SCsacsigma4) ;

	SCsacmax            =    0;
	SCsacprevmax        =    0;
	scsactm =      0.01;
	BSGscsacK           =    0.06;
	SCfefsacK =    1;
	SCsnrlbK =     2;
	SCscbuK =     18.0;

	SCscqvK= 1.0;
}

public void simRun()
{
	// System.err.println("@@@@ SCsac simRun entered @@@@");
	scsac.set(system.nsldiff.eval(scsac,scsactm, __tempSCsac9.setReference(NslSub.eval(__tempSCsac9.get(), __tempSCsac8.setReference(NslSub.eval(__tempSCsac8.get(), __tempSCsac7.setReference(NslAdd.eval(__tempSCsac7.get(), __tempSCsac6.setReference(NslAdd.eval(__tempSCsac6.get(), __tempSCsac0.setReference(NslSub.eval(__tempSCsac0.get(), 0, scsac)), (__tempSCsac1.setReference(NslElemMult.eval(__tempSCsac1.get(), SCscqvK, SCqv_in))))), (__tempSCsac2.setReference(NslElemMult.eval(__tempSCsac2.get(), SCfefsacK, FEFsac_in))))), (__tempSCsac3.setReference(NslElemMult.eval(__tempSCsac3.get(), SCsnrlbK, SNRlatburst_in))))), (__tempSCsac5.setReference(SCscbuK*__tempSCsac4.setReference(SCbu_in.get(4, 4)).get()))))));
	SCsac_out.set(Nsl2Sigmoid.eval(scsac,SCsacsigma1,SCsacsigma2,SCsacsigma3,SCsacsigma4));
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int array_size;

	/* Temporary variables */
		NslDouble2 __tempSCsac0 = new NslDouble2(1, 1);
		NslDouble2 __tempSCsac1 = new NslDouble2(1, 1);
		NslDouble2 __tempSCsac2 = new NslDouble2(1, 1);
		NslDouble2 __tempSCsac3 = new NslDouble2(1, 1);
		NslDouble0 __tempSCsac4 = new NslDouble0();
		NslDouble0 __tempSCsac5 = new NslDouble0();
		NslDouble2 __tempSCsac6 = new NslDouble2(1, 1);
		NslDouble2 __tempSCsac7 = new NslDouble2(1, 1);
		NslDouble2 __tempSCsac8 = new NslDouble2(1, 1);
		NslDouble2 __tempSCsac9 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public SCsac(String nslName, NslModule nslParent, int array_size)
{
		super(nslName, nslParent);
		this.array_size=array_size;
		initSys();
		makeInstSCsac(nslName, nslParent, array_size);
	}

	public void makeInstSCsac(String nslName, NslModule nslParent, int array_size)
{ 
		Object[] nslArgs=new Object[]{array_size};
		callFromConstructorTop(nslArgs);
		SNRlatburst_in = new NslDinDouble2("SNRlatburst_in", this, array_size, array_size);
		FEFsac_in = new NslDinDouble2("FEFsac_in", this, array_size, array_size);
		SCqv_in = new NslDinDouble2("SCqv_in", this, array_size, array_size);
		SCbu_in = new NslDinDouble2("SCbu_in", this, array_size, array_size);
		SCsac_out = new NslDoutDouble2("SCsac_out", this, array_size, array_size);
		scsac = new NslDouble2("scsac", this, array_size, array_size);
		FOVEAX = new NslInt0("FOVEAX", this);
		FOVEAY = new NslInt0("FOVEAY", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end SCsac

