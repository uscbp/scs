/** 
 SNRlatburst class
 Represents the Substantia Nigra pars Reticulata Burst Cells Layer
 see    SNRlatburst
 version 0.1 96-11-19
 author  Michael Crowley
 -var private CDdirlatburst_in - input coming from CDlatburst module (of type NslDouble2)
 -var private STNlatburst_in - input coming from STNlatburst module (of type NslDouble2)
 -var private SNRlatburst_out - output going to SC module (of type NslDouble2)
*/
package CrowleyModel.SNRlatburst.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class SNRlatburst extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  SNRlatburst
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 CDdirlatburst_in; // 
public  NslDinDouble2 STNlatburst_in; // 
public  NslDoutDouble2 SNRlatburst_out; // 
private double snrlatbursttm; // 
private double SNRlatburstTONIC; // 
private double SNRcdlbK; // 
private double SNRstnlbK; // 
private double SNRlbsigma1; // 
private double SNRlbsigma2; // 
private double SNRlbsigma3; // 
private double SNRlbsigma4; // 
private  NslDouble2 snrlatburst; // 

//methods 
public void initRun () {

    snrlatbursttm = 0.01;
    SNRlatburstTONIC = 30;
    SNRcdlbK = 1;
    SNRstnlbK = 0.5;
    SNRlbsigma1 = 15;
    SNRlbsigma2 = 60;
    SNRlbsigma3 = 0;
    SNRlbsigma4 = 60;
    snrlatburst.set(  30);

 	// 99/8/2 aa check on the following
    SNRlatburst_out.set(  Nsl2Sigmoid.eval (snrlatburst,SNRlbsigma1, SNRlbsigma2,
                                           SNRlbsigma3, SNRlbsigma4));
  }
public void simRun () {
  // System.err.println("@@@@ SNRlatburst simRun entered @@@@");
    snrlatburst.set(  system.nsldiff.eval (snrlatburst,snrlatbursttm, 
                                    __tempSNRlatburst5.setReference(NslAdd.eval(__tempSNRlatburst5.get(), __tempSNRlatburst4.setReference(NslSub.eval(__tempSNRlatburst4.get(), __tempSNRlatburst3.setReference(NslAdd.eval(__tempSNRlatburst3.get(), __tempSNRlatburst0.setReference(NslSub.eval(__tempSNRlatburst0.get(), 0, snrlatburst)), SNRlatburstTONIC)), (__tempSNRlatburst1.setReference(NslElemMult.eval(__tempSNRlatburst1.get(), SNRcdlbK, CDdirlatburst_in))))), (__tempSNRlatburst2.setReference(NslElemMult.eval(__tempSNRlatburst2.get(), SNRstnlbK, STNlatburst_in)))))));
    SNRlatburst_out.set(  Nsl2Sigmoid.eval (snrlatburst,SNRlbsigma1, SNRlbsigma2,
                                           SNRlbsigma3, SNRlbsigma4));

  }
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int CorticalArraySize;

	/* Temporary variables */
		NslDouble2 __tempSNRlatburst0 = new NslDouble2(1, 1);
		NslDouble2 __tempSNRlatburst1 = new NslDouble2(1, 1);
		NslDouble2 __tempSNRlatburst2 = new NslDouble2(1, 1);
		NslDouble2 __tempSNRlatburst3 = new NslDouble2(1, 1);
		NslDouble2 __tempSNRlatburst4 = new NslDouble2(1, 1);
		NslDouble2 __tempSNRlatburst5 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public SNRlatburst(String nslName, NslModule nslParent, int CorticalArraySize)
{
		super(nslName, nslParent);
		this.CorticalArraySize=CorticalArraySize;
		initSys();
		makeInstSNRlatburst(nslName, nslParent, CorticalArraySize);
	}

	public void makeInstSNRlatburst(String nslName, NslModule nslParent, int CorticalArraySize)
{ 
		Object[] nslArgs=new Object[]{CorticalArraySize};
		callFromConstructorTop(nslArgs);
		CDdirlatburst_in = new NslDinDouble2("CDdirlatburst_in", this, CorticalArraySize, CorticalArraySize);
		STNlatburst_in = new NslDinDouble2("STNlatburst_in", this, CorticalArraySize, CorticalArraySize);
		SNRlatburst_out = new NslDoutDouble2("SNRlatburst_out", this, CorticalArraySize, CorticalArraySize);
		snrlatburst = new NslDouble2("snrlatburst", this, CorticalArraySize, CorticalArraySize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end SNRlatburst

