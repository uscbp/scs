/** 
 GPEmedburst class
 Represents the Globus Pallidus External Burst Cells Layer
 see     GPEmedburst
 version 0.1 96-11-19
 author  Michael Crowley
 -var private CDindmedburst_in - input coming from CDmedburst module (of type NslDouble2)
 -var private GPEmedburst_out - output going to STNmedburst module (of type NslDouble2)
*/
package CrowleyModel.GPEmedburst.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class GPEmedburst extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  GPEmedburst
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 CDindmedburst_in; // 
public  NslDoutDouble2 GPEmedburst_out; // 
private double gpemedbursttm; // 
private double GPEmedburstTONIC; // 
private double GPEmedburstK; // 
private double GPElbsigma1; // 
private double GPElbsigma2; // 
private double GPElbsigma3; // 
private double GPElbsigma4; // 
private  NslDouble2 gpemedburst; // 

//methods 
public void initRun () 
{
	GPEmedburst_out.set(0);
	gpemedbursttm = 0.01;
	GPEmedburstTONIC = 30;
	GPEmedburstK = 2;
	GPElbsigma1 = 0;
	GPElbsigma2 = 60;
	GPElbsigma3 = 0;
	GPElbsigma4 = 60;
}

public void simRun () 
{
	// System.err.println("@@@@ GPEmedburst simRun entered @@@@");
	gpemedburst.set(  system.nsldiff.eval (gpemedburst,gpemedbursttm, 
                                    __tempGPEmedburst3.setReference(NslSub.eval(__tempGPEmedburst3.get(), __tempGPEmedburst2.setReference(NslAdd.eval(__tempGPEmedburst2.get(), __tempGPEmedburst0.setReference(NslSub.eval(__tempGPEmedburst0.get(), 0, gpemedburst)), GPEmedburstTONIC)), (__tempGPEmedburst1.setReference(NslElemMult.eval(__tempGPEmedburst1.get(), GPEmedburstK, CDindmedburst_in)))))));
	GPEmedburst_out.set(  Nsl2Sigmoid.eval (gpemedburst,GPElbsigma1, GPElbsigma2,
                                           GPElbsigma3, GPElbsigma4));
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int CorticalArraySize;

	/* Temporary variables */
		NslDouble2 __tempGPEmedburst0 = new NslDouble2(1, 1);
		NslDouble2 __tempGPEmedburst1 = new NslDouble2(1, 1);
		NslDouble2 __tempGPEmedburst2 = new NslDouble2(1, 1);
		NslDouble2 __tempGPEmedburst3 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public GPEmedburst(String nslName, NslModule nslParent, int CorticalArraySize)
{
		super(nslName, nslParent);
		this.CorticalArraySize=CorticalArraySize;
		initSys();
		makeInstGPEmedburst(nslName, nslParent, CorticalArraySize);
	}

	public void makeInstGPEmedburst(String nslName, NslModule nslParent, int CorticalArraySize)
{ 
		Object[] nslArgs=new Object[]{CorticalArraySize};
		callFromConstructorTop(nslArgs);
		CDindmedburst_in = new NslDinDouble2("CDindmedburst_in", this, CorticalArraySize, CorticalArraySize);
		GPEmedburst_out = new NslDoutDouble2("GPEmedburst_out", this, CorticalArraySize, CorticalArraySize);
		gpemedburst = new NslDouble2("gpemedburst", this, CorticalArraySize, CorticalArraySize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end GPEmedburst

