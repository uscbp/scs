/** 
 STNmedburst class
 Represents the Subthalamic Nucleus Burst Cells Layer
 see     STNmedburst
 version 0.1 96-11-19
 author Michael Crowley
 -var private GPEmedburst_in - input coming from GPEmedburst module (of type NslDouble2)
 -var private STNmedburst_out - output going to SNRmedburst module (of type NslDouble2)
*/
package CrowleyModel.STNmedburst.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class STNmedburst extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: CrowleyModel
//moduleName:  STNmedburst
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble2 GPEmedburst_in; // 
public  NslDoutDouble2 STNmedburst_out; // 
private double stnmedbursttm; // 
private double STNmedburstTONIC; // 
private double STNlbsigma1; // 
private double STNlbsigma2; // 
private double STNlbsigma3; // 
private double STNlbsigma4; // 
private  NslDouble2 stnmedburst; // 

//methods 
public void initRun () {
    STNmedburst_out.set(0);
    stnmedbursttm = 0.01;
    STNmedburstTONIC = 60;
    STNlbsigma1 = 10; //20;
    STNlbsigma2 = 60;
    STNlbsigma3 = 0;
    STNlbsigma4 = 60;
  }
  public void simRun () {
	  // System.err.println("@@@@ STNmedburst simRun entered @@@@");
    stnmedburst.set(  system.nsldiff.eval (stnmedburst,stnmedbursttm, 
                                    __tempSTNmedburst2.setReference(NslSub.eval(__tempSTNmedburst2.get(), __tempSTNmedburst1.setReference(NslAdd.eval(__tempSTNmedburst1.get(), __tempSTNmedburst0.setReference(NslSub.eval(__tempSTNmedburst0.get(), 0, stnmedburst)), STNmedburstTONIC)), GPEmedburst_in)) ));
    STNmedburst_out.set(  Nsl2Sigmoid.eval(stnmedburst,STNlbsigma1, STNlbsigma2,
                                           STNlbsigma3, STNlbsigma4));
  }
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int CorticalArraySize;

	/* Temporary variables */
		NslDouble2 __tempSTNmedburst0 = new NslDouble2(1, 1);
		NslDouble2 __tempSTNmedburst1 = new NslDouble2(1, 1);
		NslDouble2 __tempSTNmedburst2 = new NslDouble2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public STNmedburst(String nslName, NslModule nslParent, int CorticalArraySize)
{
		super(nslName, nslParent);
		this.CorticalArraySize=CorticalArraySize;
		initSys();
		makeInstSTNmedburst(nslName, nslParent, CorticalArraySize);
	}

	public void makeInstSTNmedburst(String nslName, NslModule nslParent, int CorticalArraySize)
{ 
		Object[] nslArgs=new Object[]{CorticalArraySize};
		callFromConstructorTop(nslArgs);
		GPEmedburst_in = new NslDinDouble2("GPEmedburst_in", this, CorticalArraySize, CorticalArraySize);
		STNmedburst_out = new NslDoutDouble2("STNmedburst_out", this, CorticalArraySize, CorticalArraySize);
		stnmedburst = new NslDouble2("stnmedburst", this, CorticalArraySize, CorticalArraySize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end STNmedburst

