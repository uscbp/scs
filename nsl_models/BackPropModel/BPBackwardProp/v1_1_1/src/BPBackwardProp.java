package BackPropModel.BPBackwardProp.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class BPBackwardProp extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: BackPropModel
//moduleName:  BPBackwardProp
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinFloat1 bInput; // 
public  NslDinFloat1 fInput; // 
public  NslDinFloat1 mf; // 
public  NslDinFloat2 w; // 
public  NslDoutFloat1 dh; // 
public  NslDoutFloat2 dw; // 
private  NslFloat1 delta; // 
private NslFloat0 lrate; // 
public  NslDoutFloat1 bOutput; // 

//methods 
public void initModule() 
{
	lrate.nslSetAccess('W');
	lrate.set(0.8f);
}

public void simTrain() 
{
	for(int i=0; i<hidSize; i++)
	{
		for(int j=0; j<outSize; j++)
		{
			delta.set(j, __tempBPBackwardProp5.setReference(__tempBPBackwardProp4.setReference(__tempBPBackwardProp0.setReference(mf.get(j)).get()*(__tempBPBackwardProp2.setReference(1.0f-__tempBPBackwardProp1.setReference(mf.get(j)).get())).get()).get()*__tempBPBackwardProp3.setReference(bInput.get(j)).get()));
			dh.set(j, __tempBPBackwardProp7.setReference(lrate.get()*__tempBPBackwardProp6.setReference(delta.get(j)).get()));
			dw.set(i, j, __tempBPBackwardProp11.setReference(__tempBPBackwardProp10.setReference(lrate.get()*__tempBPBackwardProp8.setReference(delta.get(j)).get()).get()*__tempBPBackwardProp9.setReference(fInput.get(i)).get()));
		}
		bOutput.set(i,   NslProd.eval(__tempBPBackwardProp12.setReference(w.get(i)), delta));
	}
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int hidSize;
	int outSize;

	/* Temporary variables */
		NslFloat0 __tempBPBackwardProp0 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp1 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp2 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp3 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp4 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp5 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp6 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp7 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp8 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp9 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp10 = new NslFloat0();
		NslFloat0 __tempBPBackwardProp11 = new NslFloat0();
		NslFloat1 __tempBPBackwardProp12 = new NslFloat1(1);

	/* GENERIC CONSTRUCTOR: */
	public BPBackwardProp(String nslName, NslModule nslParent, int hidSize, int outSize)
{
		super(nslName, nslParent);
		this.hidSize=hidSize;
		this.outSize=outSize;
		initSys();
		makeInstBPBackwardProp(nslName, nslParent, hidSize, outSize);
	}

	public void makeInstBPBackwardProp(String nslName, NslModule nslParent, int hidSize, int outSize)
{ 
		Object[] nslArgs=new Object[]{hidSize, outSize};
		callFromConstructorTop(nslArgs);
		bInput = new NslDinFloat1("bInput", this, outSize);
		fInput = new NslDinFloat1("fInput", this, hidSize);
		mf = new NslDinFloat1("mf", this, outSize);
		w = new NslDinFloat2("w", this, hidSize, outSize);
		dh = new NslDoutFloat1("dh", this, outSize);
		dw = new NslDoutFloat2("dw", this, hidSize, outSize);
		delta = new NslFloat1("delta", this, outSize);
		lrate = new NslFloat0("lrate", this);
		bOutput = new NslDoutFloat1("bOutput", this, hidSize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end BPBackwardProp

