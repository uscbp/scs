package BackPropModel.BPBackwardError.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class BPBackwardError extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: BackPropModel
//moduleName:  BPBackwardError
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinFloat1 mf; // 
public  NslDinFloat1 desired; // 
public  NslDoutFloat1 eOutput; // 
private NslFloat0 stopError; // 
public  NslDoutDouble0 tss; // 

//methods 
public void initModule() 
{
	stopError.nslSetAccess('W');
	stopError.set(0.0001f);
}

public void initTrainEpochs() 
{
	eOutput.set(0);
}

public void simTrain() 
{
	eOutput.set(  __tempBPBackwardError0.setReference(NslSub.eval(__tempBPBackwardError0.get(), desired, mf)) );
	tss.set(  __tempBPBackwardError2.setReference(tss.get()+NslSum.eval(__tempBPBackwardError1.setReference(NslElemMult.eval(__tempBPBackwardError1.get(), eOutput, eOutput)))));
}

public void initTrain()
{
	tss.set(0);
}

public void endTrain() 
{
	tss.set(__tempBPBackwardError3.setReference(tss.get()/system.getEndTime()));
	if (tss.get()<stopError.get() ) 
	{
		system.nslPrintln("Convergence");
		system.breakEpochs();
		return;
	}
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int outSize;

	/* Temporary variables */
		NslFloat1 __tempBPBackwardError0 = new NslFloat1(1);
		NslFloat1 __tempBPBackwardError1 = new NslFloat1(1);
		NslDouble0 __tempBPBackwardError2 = new NslDouble0();
		NslDouble0 __tempBPBackwardError3 = new NslDouble0();

	/* GENERIC CONSTRUCTOR: */
	public BPBackwardError(String nslName, NslModule nslParent, int outSize)
{
		super(nslName, nslParent);
		this.outSize=outSize;
		initSys();
		makeInstBPBackwardError(nslName, nslParent, outSize);
	}

	public void makeInstBPBackwardError(String nslName, NslModule nslParent, int outSize)
{ 
		Object[] nslArgs=new Object[]{outSize};
		callFromConstructorTop(nslArgs);
		mf = new NslDinFloat1("mf", this, outSize);
		desired = new NslDinFloat1("desired", this, outSize);
		eOutput = new NslDoutFloat1("eOutput", this, outSize);
		stopError = new NslFloat0("stopError", this);
		tss = new NslDoutDouble0("tss", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end BPBackwardError

