package BackPropModel.BackPropModel.v1_1_1.src;
import BackPropModel.TrainManager.v1_1_1.src.*;
import BackPropModel.BackPropLayers.v1_1_1.src.*;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class BackPropModel extends NslModel{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: BackPropModel
//moduleName:  BackPropModel
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  TrainManager train; // 
public  BackPropLayers layers; // 
private int inSize=2; // 
private int hidSize=2; // 
private int outSize=1; // 
private int nPats=4; // 

//methods 
public void initSys() 
{
	system.setRunEndTime(nPats);
	system.setNumTrainEpochs(5000);
	system.setTrainEndTime(nPats);
}

public void initModule() 
{
	system.nslSetTrainDelta(1);     
	system.nslSetRunDelta(1);
}
public void makeConn(){
    nslConnect(train.dInput,layers.in);
    nslConnect(train.dOutput,layers.desired);
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* EMPTY CONSTRUCTOR: Called only for the top level module */
	public BackPropModel() {
		super("backPropModel",(NslModel)null);
		initSys();
		makeInstBackPropModel("backPropModel",null);
	}

	/* Formal parameters */

	/* Temporary variables */

	/* GENERIC CONSTRUCTOR: */
	public BackPropModel(String nslName, NslModule nslParent)
{
		super(nslName, nslParent);
		initSys();
		makeInstBackPropModel(nslName, nslParent);
	}

	public void makeInstBackPropModel(String nslName, NslModule nslParent)
{ 
		Object[] nslArgs=new Object[]{};
		callFromConstructorTop(nslArgs);
		train = new TrainManager("train", this, nPats, inSize, outSize);
		layers = new BackPropLayers("layers", this, inSize, hidSize, outSize);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end BackPropModel

