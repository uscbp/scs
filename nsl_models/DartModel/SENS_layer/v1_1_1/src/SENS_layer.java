package DartModel.SENS_layer.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class SENS_layer extends NslJavaModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: DartModel
//moduleName:  SENS_layer
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinDouble0 t_in; // Throw direction [-50:50]
public  NslDoutDouble0 p_out; // Prism angle [0:30]
public  NslDoutDouble1 sens_out; // Error sensors

//methods 
public void initModule()
{
	nslAddAreaCanvas("output", "sens", sens_out, 0, 1);
}

public void simTrain() 
{
	simRun();
}
 
public void simRun()
{
	double Derror;

	p_out.set(  (NslDouble0)nslGetValue("dartModel.p_out"));
	Derror = (double)(__tempSENS_layer0.setReference(p_out.get()-t_in.get()) ).get();
	/* go leftward or rightward */
	sens_out.set(0,   NslStep.eval(Derror,0,.1-Derror/10.,0.1));
	sens_out.set(1,   NslStep.eval(Derror,0,0.1,.1+Derror/10.));
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */

	/* Temporary variables */
		NslDouble0 __tempSENS_layer0 = new NslDouble0();

	/* GENERIC CONSTRUCTOR: */
	public SENS_layer(String nslName, NslModule nslParent)
{
		super(nslName, nslParent);
		initSys();
		makeInstSENS_layer(nslName, nslParent);
	}

	public void makeInstSENS_layer(String nslName, NslModule nslParent)
{ 
		Object[] nslArgs=new Object[]{};
		callFromConstructorTop(nslArgs);
		t_in = new NslDinDouble0("t_in", this);
		p_out = new NslDoutDouble0("p_out", this);
		sens_out = new NslDoutDouble1("sens_out", this, 2);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end SENS_layer

