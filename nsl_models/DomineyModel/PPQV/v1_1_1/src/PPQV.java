package DomineyModel.PPQV.v1_1_1.src;
import DomineyModel.DomineyLib.v1_1_1.src.*;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class PPQV extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: DomineyModel
//moduleName:  PPQV
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinFloat0 horizontalVelocity; // 
public  NslDinFloat0 verticalVelocity; // 
public  NslDinFloat2 scDelay; // 
public  NslDinFloat2 erasure2; // 
public  NslDinFloat2 posteriorParietal; // 
public  NslDinFloat2 fovElem; // 
public  NslDoutFloat2 ppqv; // 
private NslFloat0 qvCtr; // 
private NslFloat0 qvFactor; // 
private NslFloat0 oblique; // 
private NslFloat0 qvMask_k1; // 
private NslFloat0 qvMask_k2; // 
private NslFloat0 ppqvPot_k1; // 
private NslFloat0 ppqvPot_k2; // 
private NslFloat0 ppqv_kx1; // 
private NslFloat0 ppqv_kx2; // 
private NslFloat0 ppqv_ky1; // 
private NslFloat0 ppqv_ky2; // 
private  NslFloat2 qvMask; // 
private  NslFloat2 qvmask1; // 
private NslFloat0 inhSurr; // 
private  NslFloat2 ppqvPot; // 
private  NslFloat2 ppqva; // 
private  NslFloat2 ppqvT; // 
private NslFloat0 protocolNum; // 
private int center; // 
public  DomineyLib domineyLib; // 

//methods 
public void initModule() 
{
	qvMask_k1.nslSetAccess('W');
}

public void initRun() 
{
	protocolNum.set(-1);
	protocolNum.set((NslInt0)nslGetValue("domineyModel.protocolNum"));
	center = stdsz/2;

	ppqv.set(0);
        ppqva.set(0);
        ppqvT.set(0);
        qvMask.set(0);
        qvmask1.set(0);
        inhSurr.set(0);
        ppqvPot.set(0);

	qvCtr.set(  1);       
 
	qvFactor.set(  1600);
	oblique.set(  1);

	qvMask_k1.set(1.23);
	//98/11/17 aa: qvMask_k1 =1.23 for non-memory protocolNums
	// and 0 for memory protocolNums
	if ((protocolNum.get()==2)||(protocolNum.get()==3)) 
	{
		qvMask_k1.set(0);  //0 for memory protocolNums to disable
		// ppqv's intrinsic memory
	}
	// 99/7/27 these are memory saccades but require 
	// ppqv to save the second second until FON goes high
	// and the new location can be locked into fefmem and thmem.

	if ((protocolNum.get()==8)||(protocolNum.get()==15)) 
	{
		qvMask_k1.set(1.23);
	}

	qvMask_k2.set(0); 
	ppqvPot_k1.set( 1);
	ppqvPot_k2.set( 0);// for scDelay
	ppqv_kx1.set(0);

	ppqv_kx2.set(97.2); //aa: 96.5 or 97.4 in 2.1.7 but no description as 
	// too which protocolNum 

	ppqv_ky1.set(0);
	ppqv_ky2.set(90);
	inhSurr.set(0);  //aa: 98-7-20 no data to support this except comment below
}

public void simRun() 
{
	qvmask1.set( domineyLib.shift(horizontalVelocity,verticalVelocity,qvFactor,stdsz));

	// commented out in 2.1.7
	// qvmask2 =DomineyLib.shift(horizontalVelocity,verticalVelocity,
	// qvFactor, stdsz, qvCenter, Oblique);

	//qvMask = qvMask_k1*qvmask1 + qvMask_k2*qvmask2;
	// qvMask_k2 always 0 in 2.1.7
	qvMask.set(  __tempPPQV0.setReference(NslElemMult.eval(__tempPPQV0.get(), qvMask_k1, qvmask1)));

	// This draws a square -5 elements on a side- around the fovea area
	qvMask.set(2, 2,   inhSurr)		;
	qvMask.set(2, 3,   inhSurr)		;
	qvMask.set(2, 4,   inhSurr)		; 
	qvMask.set(2, 5,   inhSurr)		;
	qvMask.set(2, 6,   inhSurr)		;
	qvMask.set(3, 6,   inhSurr)		;
	qvMask.set(4, 6,   inhSurr)		;
 	qvMask.set(5, 6,   inhSurr)		;
	qvMask.set(6, 2,   inhSurr)		;
	qvMask.set(6, 3,   inhSurr)		;
	qvMask.set(6, 4,   inhSurr)		;
	qvMask.set(6, 5,   inhSurr)		;
	qvMask.set(6, 6,   inhSurr)		;
	qvMask.set(3, 2,   inhSurr)		;
	qvMask.set(4, 2,   inhSurr)		; 
	qvMask.set(5, 2,   inhSurr)		;


	ppqvPot.set(  __tempPPQV7.setReference(NslSub.eval(__tempPPQV7.get(), __tempPPQV6.setReference(NslSub.eval(__tempPPQV6.get(), __tempPPQV5.setReference(NslAdd.eval(__tempPPQV5.get(), posteriorParietal, __tempPPQV1.setReference(NslConv.eval(__tempPPQV1.get(), qvMask, ppqva)))), __tempPPQV2.setReference(NslElemMult.eval(__tempPPQV2.get(), ppqvPot_k1, fovElem)))), __tempPPQV4.setReference(NslElemMult.eval(__tempPPQV4.get(), ppqvPot_k2, (__tempPPQV3.setReference(NslConv.eval(__tempPPQV3.get(), erasure2, scDelay))))))));
	ppqvPot.set(  __tempPPQV8.setReference(NslElemMult.eval(__tempPPQV8.get(), erasure2, ppqvPot))); 
	ppqva.set(  NslSigmoid.eval(ppqvPot,ppqv_kx1,ppqv_kx2,ppqv_ky1,ppqv_ky2));
	ppqv.set(  ppqva);
	ppqv.set(	center, center,   0); 	// center of fovea is zero

	//98/11/9 aa: added until 3d plot gets fixed
	// using this matrix instead of ppqv for 3d display
	ppqvT.set( NslTrans.eval(ppqv));

	if (system.debug>=17) 
	{
		system.nslPrintln("PPQV: ppqv: ");
		system.nslPrintln(ppqv);
	}
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int stdsz;

	/* Temporary variables */
		NslFloat2 __tempPPQV0 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV1 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV2 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV3 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV4 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV5 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV6 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV7 = new NslFloat2(1, 1);
		NslFloat2 __tempPPQV8 = new NslFloat2(1, 1);

	/* GENERIC CONSTRUCTOR: */
	public PPQV(String nslName, NslModule nslParent, int stdsz)
{
		super(nslName, nslParent);
		this.stdsz=stdsz;
		initSys();
		makeInstPPQV(nslName, nslParent, stdsz);
	}

	public void makeInstPPQV(String nslName, NslModule nslParent, int stdsz)
{ 
		Object[] nslArgs=new Object[]{stdsz};
		callFromConstructorTop(nslArgs);
		horizontalVelocity = new NslDinFloat0("horizontalVelocity", this);
		verticalVelocity = new NslDinFloat0("verticalVelocity", this);
		scDelay = new NslDinFloat2("scDelay", this, stdsz, stdsz);
		erasure2 = new NslDinFloat2("erasure2", this, stdsz, stdsz);
		posteriorParietal = new NslDinFloat2("posteriorParietal", this, stdsz, stdsz);
		fovElem = new NslDinFloat2("fovElem", this, stdsz, stdsz);
		ppqv = new NslDoutFloat2("ppqv", this, stdsz, stdsz);
		qvCtr = new NslFloat0("qvCtr", this);
		qvFactor = new NslFloat0("qvFactor", this);
		oblique = new NslFloat0("oblique", this);
		qvMask_k1 = new NslFloat0("qvMask_k1", this);
		qvMask_k2 = new NslFloat0("qvMask_k2", this);
		ppqvPot_k1 = new NslFloat0("ppqvPot_k1", this);
		ppqvPot_k2 = new NslFloat0("ppqvPot_k2", this);
		ppqv_kx1 = new NslFloat0("ppqv_kx1", this);
		ppqv_kx2 = new NslFloat0("ppqv_kx2", this);
		ppqv_ky1 = new NslFloat0("ppqv_ky1", this);
		ppqv_ky2 = new NslFloat0("ppqv_ky2", this);
		qvMask = new NslFloat2("qvMask", this, stdsz, stdsz);
		qvmask1 = new NslFloat2("qvmask1", this, stdsz, stdsz);
		inhSurr = new NslFloat0("inhSurr", this);
		ppqvPot = new NslFloat2("ppqvPot", this, stdsz, stdsz);
		ppqva = new NslFloat2("ppqva", this, stdsz, stdsz);
		ppqvT = new NslFloat2("ppqvT", this, stdsz, stdsz);
		protocolNum = new NslFloat0("protocolNum", this);
		domineyLib = new DomineyLib("domineyLib", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end PPQV

