package DomineyModel.EBN.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class EBN extends NslModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: DomineyModel
//moduleName:  EBN
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDinFloat0 pause; // 
public  NslDinFloat2 mlbn; // 
public  NslDoutFloat0 ebn; // 
private NslFloat0 ebnPot_tm; // 
private NslFloat0 ebnPot_k1; // 
private NslFloat0 ebn_k1; // 
private NslFloat0 ebn_k2; // 
private NslFloat0 ebn_k3; // 
private NslFloat0 ebnPot; // excitatory burst neurons of the brainstem saccade generator
private NslFloat0 mlbnMax; // medium long lead burst neurons max

//methods 
public void initRun() 
{
	ebn.set(0);
	ebnPot.set(0);
	mlbnMax.set(0);

	ebnPot_tm.set(  0.006);
	ebnPot_k1.set(  10);
	ebn_k1.set(  240);
	ebn_k2.set(  0);
	ebn_k3.set(  240);
}

public void simRun() 
{
	mlbnMax.set( NslMaxValue.eval(mlbn));
	ebnPot.set( system.nsldiff.eval(ebnPot,ebnPot_tm,__tempEBN3.setReference(__tempEBN2.setReference(__tempEBN0.setReference(-ebnPot.get()).get()+mlbnMax.get()).get()-__tempEBN1.setReference(ebnPot_k1.get()*pause.get()).get())));
	ebn.set(  NslRamp.eval(ebnPot,ebn_k1,ebn_k2,ebn_k3));
	if (system.debug>=8) 
	{
		system.nslPrintln("EBN:simRun: ebn:"+ebn.toString());
		system.nslPrintln("EBN:simRun: mlbnMax:"+mlbnMax.toString());
	}
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int stdsz;

	/* Temporary variables */
		NslFloat0 __tempEBN0 = new NslFloat0();
		NslFloat0 __tempEBN1 = new NslFloat0();
		NslFloat0 __tempEBN2 = new NslFloat0();
		NslFloat0 __tempEBN3 = new NslFloat0();

	/* GENERIC CONSTRUCTOR: */
	public EBN(String nslName, NslModule nslParent, int stdsz)
{
		super(nslName, nslParent);
		this.stdsz=stdsz;
		initSys();
		makeInstEBN(nslName, nslParent, stdsz);
	}

	public void makeInstEBN(String nslName, NslModule nslParent, int stdsz)
{ 
		Object[] nslArgs=new Object[]{stdsz};
		callFromConstructorTop(nslArgs);
		pause = new NslDinFloat0("pause", this);
		mlbn = new NslDinFloat2("mlbn", this, stdsz, stdsz);
		ebn = new NslDoutFloat0("ebn", this);
		ebnPot_tm = new NslFloat0("ebnPot_tm", this);
		ebnPot_k1 = new NslFloat0("ebnPot_k1", this);
		ebn_k1 = new NslFloat0("ebn_k1", this);
		ebn_k2 = new NslFloat0("ebn_k2", this);
		ebn_k3 = new NslFloat0("ebn_k3", this);
		ebnPot = new NslFloat0("ebnPot", this);
		mlbnMax = new NslFloat0("mlbnMax", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end EBN

